@model EddsWaffle.Models.Category

@{
    Layout = "~/Views/Shared/_SupervisorLayout.cshtml";
}
<!DOCTYPE html>
<html>

<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/Content/Supervisor/SetProduct.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/kendo/kendo.material.min.css" />
    <title>Category</title>
</head>
<body>
    <header>
        <div class="navbar navbar-default navbar-static-top">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand"><img src="~/Resources/Images/edds-waffle-pku.png" width="150" height="100"></img></a>
                </div>
                <div class="navbar-collapse collapse ">
                    <ul class="nav navbar-nav">
                        <li><a>@Html.ActionLink("Sales-Monitoring", "SalesMonitoring", new { controller = "Supervisor" })</a></liclass="active">
                        <li><a>@Html.ActionLink("History", "History", new { controller = "Supervisor" })</a></li>
                        <li><a>@Html.ActionLink("Trends - Analysis", "Trends", new { controller = "Supervisor" })</a></li>
                        <li><a>@Html.ActionLink("Products", "SetProduct", new { controller = "Supervisor" })</a></li>
                        <li class="active"><a>@Html.ActionLink("Menu - Category", "Category", new { controller = "Supervisor" })</a></li>
                        <li><a>@Html.ActionLink("Sign Out", "LoginAuth", new { controller = "Login" })</a></li>
                    </ul>
                </div>
            </div>
        </div>
    </header>

    <section class="callaction">
        <div class="container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="big-cta">
                        <div class="cta-text">
                            <h2><span>Product</span> - <i>Categories</i></h2>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <div id="newcategoryarea">
        <button id="addcategory" class="buttonCategory button-newCategory">Add Category</button>
    </div>
    <div id="kendo-area">
        @(Html.Kendo().Grid<EddsWaffle.Models.Category>()
                                                           .Name("category-grid")
                                                           .Columns(columns =>
                                                           {
                                                               columns.Bound(p => p.category_name).Width(200).Title("Category").Filterable(filter =>
                                                               {
                                                                   filter.Extra(false);
                                                                   filter.Operators(op =>
                                                                   {
                                                                       op.ForString(str =>
                                                                       {
                                                                           str.Clear().Contains("Searhing Category With....");
                                                                       });
                                                                   });
                                                               });
                                                               columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200).Title("Action");
                                                           })
                                                           .Editable(editable => editable.Mode(GridEditMode.InLine))
                                                           .Pageable()
                                                           .Selectable()
                                                           .Scrollable()
                                                           .Filterable(ftb=>ftb.Mode(GridFilterMode.Row))
                                                           .HtmlAttributes(new
                                                           {
                                                               style
                                                                    = "height:700px; " +
                                                                    "right: 30%;" +
                                                                    "width: 120%; " +
                                                                    "margin-top: 3%; " +
                                                                    "font-size:14px;" +
                                                                    "background-color: white;" +
                                                                    "font-family: 'Exo', sans-serif;"
                                                           })
                                                       .DataSource(dataSource => dataSource
                                                           .Ajax()
                                                           .Model(model => model.Id(p => p.id_category))
                                                           .PageSize(15)
                                                           .ServerOperation(true)
                                                           .Read(read => read.Action("Category_Data", "Supervisor"))
                                                           .Update(update => update.Action("UpdateCategory", "Supervisor"))
                                                           .Destroy(update => update.Action("DeleteCategory", "Supervisor"))
                                                           )
        )

    </div>

    <div id="myModal2" class="modal2">
        <div class="form-wrap2">
            @using (Html.BeginForm("AddCategory", "Supervisor", FormMethod.Post))
            {

                <h1><center>Add Category</center></h1>
                @Html.EditorFor(model => model.category_name, new { htmlAttributes = new { placeholder = "Product Category" } }) <br>
                <input type="submit" id="add-category" value="Add Category">
            }
            <input type="button" id="cancel-category" value="Cancel">

        </div>
    </div>

    <script>
        var modal2 = document.getElementById("myModal2");
        var btn2 = document.getElementById("addcategory");
        var cancel2 = document.getElementById("cancel-category");
        btn2.onclick = function () {
            modal2.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        cancel2.onclick = function () {
            modal2.style.display = "none";
        }

    </script>

</body>
</html>
